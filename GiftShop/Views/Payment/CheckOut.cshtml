@model GiftShopCORE.Entities.Order

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>

    <style>
        body {
            font-family: 'Montserrat', sans-serif;
            background-color: #f4f7fa;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .container {
            max-width: 600px;
            background-color: white;
            padding: 40px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .card {
            padding: 20px;
        }

        .h8 {
            font-size: 24px;
            font-weight: bold;
            color: #0c4160;
            text-align: center;
            margin-bottom: 20px;
        }

        .form-control {
            font-size: 16px;
            padding: 12px;
            background-color: #f3f3f3;
            border: 1px solid #ddd;
            border-radius: 8px;
            margin-bottom: 15px;
        }

            .form-control:focus {
                outline: none;
                border-color: #77A1D3;
                box-shadow: 0 0 5px rgba(119, 161, 211, 0.6);
            }

        .btn {
            background-color: #77A1D3;
            color: white;
            padding: 15px;
            width: 100%;
            border: none;
            border-radius: 8px;
            font-size: 18px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            .btn:hover {
                background-color: #2d4dda;
            }

        .text {
            font-size: 14px;
            font-weight: 600;
            color: #555;
        }

        .row {
            margin-top: 20px;
        }

        .total-price {
            font-size: 18px;
            font-weight: bold;
            color: #333;
            text-align: center;
            margin-top: 20px;
        }

        .alert {
            padding: 15px;
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
            border-radius: 5px;
            text-align: center;
        }

            .alert a {
                color: #004085;
                text-decoration: underline;
            }
    </style>
</head>
<body>

    <div class="container">
        <div class="card">
            <p class="h8">Payment Details</p>

            @if (User.Identity.IsAuthenticated)
            {
                <!-- Payment Form -->
                <form asp-action="Checkout" asp-controller="Payment" method="post" class="row gx-3">
                    <!-- Pass productId in a hidden input -->
                    <input type="hidden" name="productId" value="@Model.ProductId" />
                    <input type="hidden" name="price" value="@Model.Price" />
                    <input type="hidden" name="totalPrice" value="@Model.TotalPrice" />

                    <div class="col-12">
                        <div class="d-flex flex-column">
                            <p class="text mb-1">Person Name</p>
                            <input class="form-control" type="text" name="personName" placeholder="Name" required
                                   pattern="^[A-Za-z\s]+$" title="Name should only contain letters and spaces" />
                        </div>
                    </div>

                    <div class="col-12">
                        <div class="d-flex flex-column">
                            <p class="text mb-1">Card Number</p>
                            <input class="form-control" type="text" name="cardNumber" placeholder="1234567812345678" required
                                   pattern="^\d{16}$" title="Card number should be exactly 16 digits without spaces" />
                        </div>
                    </div>

                    <div class="col-6">
                        <div class="d-flex flex-column">
                            <p class="text mb-1">Expiry</p>
                            <input class="form-control" type="text" name="expiry" placeholder="MM/YYYY" required
                                   pattern="^(0[1-9]|1[0-2])\/\d{4}$" title="Expiry date should be in MM/YYYY format, e.g., 08/2022" />
                        </div>
                    </div>

                    <div class="col-6">
                        <div class="d-flex flex-column">
                            <p class="text mb-1">CVV/CVC</p>
                            <input class="form-control" type="password" name="cvv" placeholder="***" required
                                   pattern="^\d{3}$" title="CVV should be exactly 3 digits" />
                        </div>
                    </div>

                    <div class="col-12">
                        <div class="d-flex flex-column">
                            <p class="text mb-1">Quantity</p>
                            <input class="form-control" type="number" name="quantity" value="1" min="1" required onchange="updateTotalPrice(this.value)" />
                        </div>
                    </div>

                    <div class="col-12 total-price">
                        <p>Total Price: $<span id="totalPrice">@Model.TotalPrice</span></p>
                    </div>

                    <div class="col-12">
                        <button class="btn" type="submit">
                            Pay $<span id="finalPrice">@Model.TotalPrice</span>
                        </button>
                    </div>
                </form>
            }
            else
            {
                <!-- Show Login Message -->
                <div class="alert">
                    Please <a href="/Account/Login">login</a> or <a href="/Account/Register">register</a> to proceed with the payment.
                </div>
            }
        </div>
    </div>

    @if (User.Identity.IsAuthenticated)
    {
        <script>
            // Update the total price when the quantity changes
            function updateTotalPrice(quantity) {
                const pricePerUnit = @Model.Price;
                const totalPrice = pricePerUnit * quantity;
                document.getElementById("totalPrice").textContent = totalPrice.toFixed(2);
                document.getElementById("finalPrice").textContent = totalPrice.toFixed(2);
            }
        </script>
    }

</body>
</html>
